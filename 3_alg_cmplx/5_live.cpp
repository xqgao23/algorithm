/**
 * Description:
 *  NOI2130 即将举行。为了增加观赏性，CCF 决定逐一评出每个选手的成绩，并直播即时的获奖分数线。本次竞赛的获奖率为w%，即当前排名前w%的选手的最低成绩就是即时的分数线。
 *  更具体地，若当前已评出了p个选手的成绩，则当前计划获奖人数为max(1,⌊p×w%⌋)，其中w是获奖百分比，⌊x⌋表示对x向下取整，max(x,y) 表示x和y中较大的数。如有选手成绩相同，则所有成绩并列的选手都能获奖，因此实际获奖人数可能比计划中多。
 *  作为评测组的技术人员，请你帮 CCF 写一个直播程序。
 * 
 * Input:
 *  第1 行两个正整数n,w。分别代表选手总数与获奖率。
 *  第2 行有n 个非负整数，依次代表逐一评出的选手成绩。
 * 
 * Output:
 *  只有1行，包含n 个非负整数，依次代表选手成绩逐一评出后，即时的获奖分数线。相邻两个整数间用一个空格分隔。
 * 
 * Hints:
 *   对于所有测试点，每个选手的成绩均为不超过600 的非负整数，获奖百分比w是一个正整数且1≤w≤99。
 */ 
 
/**
 *  Samples:
 *  1):
 *  input:
10 60
200 300 400 500 600 600 0 300 200 100
 * 
 *  output:
200 300 400 400 400 500 400 400 300 300
 *
 *  2):
 *  input:
10 30
100 100 600 100 100 100 100 100 100 100
 * 
 *  output:
100 100 600 600 600 600 100 100 100 100
 *
 */

#include <cstdio>
#include <iostream>
#include <algorithm>

using namespace std;

int n, w, a[100010], cnt[610];

int main()
{
    cin >> n >> w;
    
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
    }
    
    for (int i = 1; i <= n; i++) {
        cnt[a[i]]++;
        int x = max(1, i * w / 100);
        for (int j = 600; j >= 0; j--) {
            x -= cnt[j];
            
            if (x <= 0) {
                cout << j << " ";
                break;
            }
        }
    }

    return 0;
}
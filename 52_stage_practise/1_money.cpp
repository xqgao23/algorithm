/**
 * Description:
 *  母牛们不但创建了它们自己的政府而且选择了建立了自己的货币系统。由于它们特殊的思考方式，它们对货币的数值感到好奇。
 *  传统地，一个货币系统是由 1,5,10,20,25,50,100 的单位面值组成的。
 *  母牛想知道有多少种不同的方法来用货币系统中的货币来构造一个确定的数值。
 *  举例来说, 使用一个货币系统 (1,2,5,10,…) 产生 18 单位面值的一些可能的方法是：18×1,9×2,8×2+2×1,3×5+2+1，等等。
 *  写一个程序来计算有多少种方法用给定的货币系统来构造一定数量的面值。保证总数在 64 位带符号整数的范围内。
 *
 * Input:
 *  第一行两个整数：货币系统中货币的种类数目 V（1≤V≤25）。要构造的数量钱是 N（1≤N≤10,000）。
 *  第二行 V 个整数：表示货币系统中货币的面值。
 *
 * Output:
 *  单独的一行，包含用这 V 种硬币凑足 N 单位货币的方案数。
 *
 * Hints:
 *  1≤n≤10<5>, 1≤hi≤10<9>
 *
 */

/**
 *  Samples:
 *  1):
 *  input:
3 10
1 2 5
 *
 *  output:
10
 *
 */

#include <algorithm>
#include <iostream>
using namespace std;
typedef long long LL;
int n, m, w[30];
LL f[10010];

int main()
{
    cin >> n >> m;
    for (int i = 1; i <= n; i++) {
        cin >> w[i];
    }
    f[0] = 1;
    for (int i = 1; i <= n; i++) {
        for (int j = w[i]; j <= m; j++) {
            f[j] += f[j - w[i]];
        }
    }
    cout << f[m] << endl;
    return 0;
}
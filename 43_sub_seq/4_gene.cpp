/**
 * Description:
 *  总所周知，人类基因由四个核苷酸组成，可以看做一个由四个字母A、C、G、T组成的字符串序列。生物学家一直对识别基因序列并确定其功能感兴趣，因为这些可以用来诊断疾病并设计新的治疗药物。
 *  在一个人类基因工作组的任务中，生物学家研究的是：两个基因的相似程度。因为这个研究对疾病的治疗有着非同寻常的作用。
 *  你的任务是比较两个基因序列，并根据如下方法计算两个基因的相似度。
 *  对于两个基因序列AGTGATG和GTTAG，将它们的碱基互相对应。当然，中间可以加入一些空碱基 - ，使得两个基因长度相等 ，例如：
 *  这样 , 两个基因之间的相似度就可以用碱基之间相似度的总和来描述，碱基之间的相似度如下表所示：
 *  于是相似度就是： (−3)+5+5+(−2)+(−3)+5+(−3)+5=9 。
 *  因为两个基因的对应方法不唯一，例如，上述两个基因也可以这样对齐：
 *  相似度为：
 *  (−3)+5+5+(−2)+5+(−1)+5=14。
 *  规定两个基因的相似度为所有对应方法中，相似度最大的那个。给定两个基因序列，请计算所有对应方法能够得到的最大相似度。
 *
 * Input:
 *  第一行包含一个整数L1(1≤L1≤5000)和一个字符串s，L1表示字符串s的长度。
 *  第二行包含一个整数L2(1≤L2≤5000)和一个字符串t，L2表示字符串t的长度。
 *  字符串仅由ACGT四个大写字母组成
 *
 * Output:
 *  输出一行，包含一个整数，表示最大相似度。
 *
 * Hints:
 *  5≤k,l≤3000 ， 1≤ci,dj≤10000
 *
 */

/**
 *  Samples:
 *  1):
 *  input:
7 AGTGATG 
5 GTTAG
 *
 *  output:
14
 *
 *  2):
 *  input:
7 AGCTATT
9 AGCTTTAAA
 *
 *  output:
21
 *
 */
 
#include <iostream>
#include <cstring>

using namespace std;

int n, m, f[5010][5010], id[130];
char A[5010], B[5010];
char s[5][5] = {
    5, -1, -2, -1, -3,
    -1, 5, -3, -2, -4,
    -2, -3, 5, -2, -2,
    -1, -2, -2, 5, -1,
    -3, -4, -2, -1, 0
};

int main()
{
    cin >> n >> (A + 1) >> m >> (B + 1);

    id['A'] = 0;
    id['C'] = 1;
    id['G'] = 2;
    id['T'] = 3;
    id['-'] = 4;

    memset(f, -0x3f, sizeof f);
    f[0][0] = 0;
    
    for (int i = 1; i <= n; i++) {
        f[i][0] = f[i - 1][0] + s[id[A[i]]][id['-']];
    }
    for (int j = 1; j <= m; j++) {
        f[0][j] = f[0][j - 1] + s[id['-']][id[B[j]]];
    }

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            f[i][j] = max(f[i][j], f[i - 1][j] + s[id[A[i]]][id['-']]);
            f[i][j] = max(f[i][j], f[i][j - 1] + s[id['-']][id[B[j]]]);
            f[i][j] = max(f[i][j], f[i - 1][j - 1] + s[id[A[i]]][id[B[j]]]);
        }
    }
    cout << f[n][m] << endl;
    return 0;
}

/**
 * Description:
 *  幻方是一种很神奇的 N×N 矩阵：它由数字 1,2,3,⋯⋯,N×N 构成，且每行、每列及两条对角线上的数字之和都相同。当 N 为奇数时，我们可以通过下方法构建一个幻方：
 *  首先将 1 写在第一行的中间。
 *  之后，按如下方式从小到大依次填写每个数 K(K=2,3,⋯,N×N) ：
 *      1.	若(K−1) 在第一行但不在最后一列，则将K 填在最后一行，(K−1) 所在列的右一列；
 *      2.	若(K−1) 在最后一列但不在第一行，则将K 填在第一列，(K−1) 所在行的上一行；
 *      3.	若 (K−1) 在第一行最后一列，则将 K 填在 (K−1) 的正下方；
 *      4.	若 (K−1) 既不在第一行，也不在最后一列，如果 (K−1) 的右上方还未填数，则将 K 填在(K−1) 的右上方，否则将K 填在(K−1) 的正下方。现给定N ，请按上述方法构造 N×N 的幻方
 * 
 * Input:
 *  输入文件只有一行，包含一个整数N，即幻方的大小
 * 
 * Output:
 *  共 N 行 ，每行 N 个整数，即按上述方法构造出的 N×N 的幻方，相邻两个整数之间用单空格隔开。
 * 
 * Hints:
 *  对于100%的数据，对于全部数据， 1<=N<=39 且 N 为奇数。
 * 
 */ 
 
/**
 *  Samples:
 *  1):
 *  input:
3
 * 
 *  output:
8 1 6
3 5 7
4 9 2
 *
 */

#include <cstdio>
#include <iostream>
#include <algorithm>

using namespace std;

int n, a[45][45];

int main()
{
    cin >> n;

    int x, y;

    x = 1;
    y = n / 2 + 1;

    a[x][y] = 1;

    for (int k = 2; k <= n * n; k++) {
        if (x == 1 && y != n) {
            x = n;
            y++;
        } else if (x != 1 && y == n) {
            x--;
            y = 1;
        } else if (x == 1 && y == n) {
            x++;
        } else if (x != 1 && y != n) {
            if (a[x - 1][y + 1] == 0) {
                x--;
                y++;
            } else {
                x++;
            }
        }
        a[x][y] = k;
    }
    
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
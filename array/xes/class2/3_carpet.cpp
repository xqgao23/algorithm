/**
 * Description:
 *  为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 n 张地毯，编号从 1 到 n 。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。
 *  地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。
 * 
 * Input:
 *  输入共 n+2 行
 *  第一行，一个整数 n ，表示总共有 n 张地毯
 *  接下来的 n 行中，第 i+1 行表示编号 i 的地毯的信息，包含四个正整数 a,b,g,k，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标 (a,b) 以及地毯在 x 轴和 y 轴方向的长度
 *  第 n+2 行包含两个正整数 x 和 y，表示所求的地面的点的坐标 (x,y)
 * 
 * Output:
 *  输出共 1 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出 -1
 * 
 * Hints:
 *  对于30%的数据，有 n <= 2；
 *  对于50%的数据， 0 <= a,b,g,k <= 100；
 *  对于100%的数据，有 0 <= n <= 10,000 ，0 <= a,b,g,k <= 100,000 。
 * 
 *  NOIP2011 提高组 day1 第 1 题。
 * 
 */ 
 
/**
 *  Samples:
 *  1):
 *  input:
3
1 0 2 3
0 2 3 3
2 1 3 3
2 2
 * 
 *  output:
3
 *
 */

#include <cstdio>
#include <iostream>
#include <algorithm>

using namespace std;

int n, a[10010], b[10010], g[10010], k[10010];

int main()
{
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cin >> a[i] >> b[i] >> g[i] >> k[i];
    }
    
    int x, y, c = -1;
    cin >> x >> y;
    
    for (int i = 1; i <= n; i++) {
        if (a[i] <= x && x <= a[i] + g[i] && b[i] <= y && y <= b[i] + k[i]) {
            c = i;
        }
    }
    cout << c << endl;
    
    return 0;
}